# Generated by Django 4.0.3 on 2022-05-25 15:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuildingValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antiquity', models.CharField(max_length=100)),
                ('value_type', models.CharField(max_length=100)),
                ('indicator', models.CharField(max_length=100)),
                ('object_type', models.CharField(max_length=100)),
                ('climatic_zone', models.CharField(max_length=4)),
                ('value1', models.FloatField()),
                ('value2', models.FloatField()),
                ('value3', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Calcul',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('file', models.IntegerField()),
                ('value11', models.CharField(default='0.0', max_length=100)),
                ('calification11', models.CharField(default='A', max_length=100)),
                ('value12', models.CharField(default='0.0', max_length=100)),
                ('calification12', models.CharField(default='A', max_length=100)),
                ('value13', models.CharField(default='0.0', max_length=100)),
                ('calification13', models.CharField(default='A', max_length=100)),
                ('value21', models.CharField(max_length=100, null=True)),
                ('calification21', models.CharField(max_length=100, null=True)),
                ('value22', models.CharField(max_length=100, null=True)),
                ('calification22', models.CharField(max_length=100, null=True)),
                ('value23', models.CharField(max_length=100, null=True)),
                ('calification23', models.CharField(max_length=100, null=True)),
                ('value31', models.CharField(max_length=100, null=True)),
                ('calification31', models.CharField(max_length=100, null=True)),
                ('value32', models.CharField(max_length=100, null=True)),
                ('calification32', models.CharField(max_length=100, null=True)),
                ('value33', models.CharField(max_length=100, null=True)),
                ('calification33', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassificationNotResidentialBuilding',
            fields=[
                ('calification', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('min_C', models.FloatField()),
                ('max_C', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ClassificationResidentialBuilding',
            fields=[
                ('calification', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('min_C1', models.DecimalField(decimal_places=3, max_digits=10)),
                ('max_C1', models.DecimalField(decimal_places=3, max_digits=10)),
                ('min_C2', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
                ('max_C2', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExistingBuldingDemandDispersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('dispersion', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExistingBuldingEnergyAndEmissionsDispersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('dispersion', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='name', max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('user', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewBuldingDemandDispersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('dispersion', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewBuldingEnergyAndEmissionsDispersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('dispersion', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_type', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('core_number', models.IntegerField()),
                ('consumption', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(default='name', max_length=100)),
                ('surname', models.CharField(default='surname', max_length=100)),
                ('password', models.CharField(default='password', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ObjectData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=100)),
                ('object_type', models.CharField(max_length=100)),
                ('value_type', models.CharField(max_length=100)),
                ('indicator', models.CharField(default='default', max_length=100)),
                ('antiquity', models.CharField(default='default', max_length=100)),
                ('zone', models.CharField(default='default', max_length=100)),
                ('climatic_zone', models.CharField(default='default', max_length=7)),
                ('classification', models.CharField(default='default', max_length=7)),
                ('value1', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
                ('value2', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
                ('value3', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
            ],
            options={
                'unique_together': {('object', 'object_type', 'value_type', 'indicator', 'antiquity', 'zone', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='NewBuildingEnergyConsume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
                ('ACS', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='NewBuildingEmissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
                ('ACS', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='NewBuildingDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='ExistingBuildingEnergyConsume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
                ('ACS', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='ExistingBuildingEmissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
                ('ACS', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='ExistingBuildingDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.IntegerField()),
                ('climatic_zone', models.CharField(max_length=4)),
                ('heating', models.FloatField()),
                ('refrigeration', models.FloatField()),
            ],
            options={
                'unique_together': {('building_type', 'climatic_zone')},
            },
        ),
        migrations.CreateModel(
            name='ClassificationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calification', models.CharField(max_length=4)),
                ('number_metrics', models.CharField(default=1, max_length=2)),
                ('min_C1', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('max_C1', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('min_C2', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('max_C2', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'unique_together': {('calification', 'number_metrics')},
            },
        ),
    ]
